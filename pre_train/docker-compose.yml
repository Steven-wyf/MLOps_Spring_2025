version: "3.8"

services:
  bert-encoder:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bert-encoder
    volumes:
      - /mnt/object:/mnt/object
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    environment:
      MLFLOW_TRACKING_URI: http://129.114.25.37:8000
      MLFLOW_S3_ENDPOINT_URL: http://129.114.25.37:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: XCqPacaUHUur82cNZI1R
      PLAYLIST_DATA_DIR: /mnt/object
      OUTPUT_DIR: /app/outputs
      LOG_DIR: /app/logs
      RUN_ID: ${RUN_ID:-$(date +%Y%m%d%H%M%S)}
    command: ["python", "bert_encoding.py"]
    restart: on-failure
    deploy:
      resources:
        reservations:
          devices:
            - driver: amd
              count: 1
              capabilities: [gpu]

  matrix-factorization:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: matrix-factorization
    volumes:
      - /mnt/object:/mnt/object
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    environment:
      MLFLOW_TRACKING_URI: http://129.114.25.37:8000
      MLFLOW_S3_ENDPOINT_URL: http://129.114.25.37:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: XCqPacaUHUur82cNZI1R
      PLAYLIST_DATA_DIR: /mnt/object
      OUTPUT_DIR: /app/outputs
      LOG_DIR: /app/logs
      RUN_ID: ${RUN_ID:-$(date +%Y%m%d%H%M%S)}
    command: ["python", "matrix_factorization.py"]
    depends_on:
      - bert-encoder
    restart: on-failure
    deploy:
      resources:
        reservations:
          devices:
            - driver: amd
              count: 1
              capabilities: [gpu]

  mlp-trainer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mlp-trainer
    volumes:
      - /mnt/object:/mnt/object
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    environment:
      MLFLOW_TRACKING_URI: http://129.114.25.37:8000
      MLFLOW_S3_ENDPOINT_URL: http://129.114.25.37:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: XCqPacaUHUur82cNZI1R
      PLAYLIST_DATA_DIR: /mnt/object
      OUTPUT_DIR: /app/outputs
      LOG_DIR: /app/logs
      RUN_ID: ${RUN_ID:-$(date +%Y%m%d%H%M%S)}
    command: ["python", "mlp_train.py"]
    depends_on:
      - matrix-factorization
    restart: on-failure
    deploy:
      resources:
        reservations:
          devices:
            - driver: amd
              count: 1
              capabilities: [gpu]

  llara-trainer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: llara-trainer
    volumes:
      - /mnt/object:/mnt/object
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    environment:
      MLFLOW_TRACKING_URI: http://129.114.25.37:8000
      MLFLOW_S3_ENDPOINT_URL: http://129.114.25.37:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: XCqPacaUHUur82cNZI1R
      PLAYLIST_DATA_DIR: /mnt/object
      OUTPUT_DIR: /app/outputs
      LOG_DIR: /app/logs
      RUN_ID: ${RUN_ID:-$(date +%Y%m%d%H%M%S)}
    command: ["python", "llara_train.py"]
    depends_on:
      - mlp-trainer
    restart: on-failure
    deploy:
      resources:
        reservations:
          devices:
            - driver: amd
              count: 1
              capabilities: [gpu]

networks:
  default:
    name: mlops-network
    external: true 